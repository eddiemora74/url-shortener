<div class="modal fade" id="@ModalId" tabindex="-1" aria-labelledby="@($"{ModalId}Label")" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="@($"{ModalId}Label")">@Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @Body
            </div>
            <div class="modal-footer">
                @if (Footer is not null)
                {
                    @Footer
                }
                else
                {
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string Title { get; set; } = "Modal Title";
    [Parameter] public RenderFragment? Body { get; set; }
    [Parameter] public RenderFragment? Footer { get; set; }
    [Inject] private IJSRuntime JSRuntime { get; set; }
    private string ModalId { get; } = Guid.NewGuid().ToString();

    public void ShowModal()
    {
        var jsRuntime = (IJSInProcessRuntime)JSRuntime;
        jsRuntime.InvokeVoid("showModal", ModalId);
    }

    public void HideModal()
    {
        var jsRuntime = (IJSInProcessRuntime)JSRuntime;
        jsRuntime.InvokeVoid("hideModal", ModalId);
    }
}
